using AutoMapper;
using Maliev.OrderService.Api.DTOs.Request;
using Maliev.OrderService.Api.DTOs.Response;
using Maliev.OrderService.Data.Models;

namespace Maliev.OrderService.Api.Mappings;

public class OrderMappingProfile : Profile
{
    public OrderMappingProfile()
    {
        // Order mappings
        CreateMap<CreateOrderRequest, Order>()
            .ForMember(dest => dest.OrderId, opt => opt.Ignore()) // Generated by service
            .ForMember(dest => dest.MaterialName, opt => opt.Ignore())
            .ForMember(dest => dest.ColorName, opt => opt.Ignore())
            .ForMember(dest => dest.SurfaceFinishingName, opt => opt.Ignore())
            .ForMember(dest => dest.MaterialCacheUpdatedAt, opt => opt.Ignore())
            .ForMember(dest => dest.ManufacturedQuantity, opt => opt.Ignore())
            .ForMember(dest => dest.ActualDeliveryDate, opt => opt.Ignore())
            .ForMember(dest => dest.QuotedAmount, opt => opt.Ignore())
            .ForMember(dest => dest.QuoteCurrency, opt => opt.Ignore())
            .ForMember(dest => dest.PaymentId, opt => opt.Ignore())
            .ForMember(dest => dest.PaymentStatus, opt => opt.Ignore())
            .ForMember(dest => dest.Version, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedAt, opt => opt.Ignore())
            .ForMember(dest => dest.UpdatedAt, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.UpdatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.ServiceCategory, opt => opt.Ignore())
            .ForMember(dest => dest.ProcessType, opt => opt.Ignore())
            .ForMember(dest => dest.OrderStatuses, opt => opt.Ignore())
            .ForMember(dest => dest.OrderFiles, opt => opt.Ignore())
            .ForMember(dest => dest.OrderNotes, opt => opt.Ignore())
            .ForMember(dest => dest.AuditLogs, opt => opt.Ignore())
            .ForMember(dest => dest.PrintingAttributes, opt => opt.Ignore())
            .ForMember(dest => dest.CncAttributes, opt => opt.Ignore())
            .ForMember(dest => dest.SheetMetalAttributes, opt => opt.Ignore())
            .ForMember(dest => dest.ScanningAttributes, opt => opt.Ignore())
            .ForMember(dest => dest.DesignAttributes, opt => opt.Ignore());

        CreateMap<UpdateOrderRequest, Order>()
            .ForMember(dest => dest.Version, opt => opt.Ignore()) // Handled separately for concurrency
            .ForMember(dest => dest.OrderId, opt => opt.Ignore())
            .ForMember(dest => dest.CustomerId, opt => opt.Ignore())
            .ForMember(dest => dest.CustomerType, opt => opt.Ignore())
            .ForMember(dest => dest.ServiceCategoryId, opt => opt.Ignore())
            .ForMember(dest => dest.ProcessTypeId, opt => opt.Ignore())
            .ForMember(dest => dest.IsConfidential, opt => opt.Ignore())
            .ForMember(dest => dest.MaterialName, opt => opt.Ignore())
            .ForMember(dest => dest.ColorName, opt => opt.Ignore())
            .ForMember(dest => dest.SurfaceFinishingName, opt => opt.Ignore())
            .ForMember(dest => dest.MaterialCacheUpdatedAt, opt => opt.Ignore())
            .ForMember(dest => dest.PaymentId, opt => opt.Ignore())
            .ForMember(dest => dest.PaymentStatus, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedAt, opt => opt.Ignore())
            .ForMember(dest => dest.UpdatedAt, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.UpdatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.ServiceCategory, opt => opt.Ignore())
            .ForMember(dest => dest.ProcessType, opt => opt.Ignore())
            .ForMember(dest => dest.OrderStatuses, opt => opt.Ignore())
            .ForMember(dest => dest.OrderFiles, opt => opt.Ignore())
            .ForMember(dest => dest.OrderNotes, opt => opt.Ignore())
            .ForMember(dest => dest.AuditLogs, opt => opt.Ignore())
            .ForMember(dest => dest.PrintingAttributes, opt => opt.Ignore())
            .ForMember(dest => dest.CncAttributes, opt => opt.Ignore())
            .ForMember(dest => dest.SheetMetalAttributes, opt => opt.Ignore())
            .ForMember(dest => dest.ScanningAttributes, opt => opt.Ignore())
            .ForMember(dest => dest.DesignAttributes, opt => opt.Ignore())
            .ForAllMembers(opts => opts.Condition((src, dest, srcMember) => srcMember != null));

        CreateMap<Order, OrderResponse>()
            .ForMember(dest => dest.Version, opt => opt.MapFrom(src => Convert.ToBase64String(src.Version)))
            .ForMember(dest => dest.ServiceCategoryName, opt => opt.MapFrom(src => src.ServiceCategory != null ? src.ServiceCategory.Name : null))
            .ForMember(dest => dest.ProcessTypeName, opt => opt.MapFrom(src => src.ProcessType != null ? src.ProcessType.Name : null))
            .ForMember(dest => dest.CurrentStatus, opt => opt.MapFrom(src => src.OrderStatuses.OrderByDescending(s => s.Timestamp).FirstOrDefault() != null ? src.OrderStatuses.OrderByDescending(s => s.Timestamp).First().Status : null))
            .ForMember(dest => dest.PrintingAttributes, opt => opt.MapFrom(src => src.PrintingAttributes))
            .ForMember(dest => dest.CncAttributes, opt => opt.MapFrom(src => src.CncAttributes))
            .ForMember(dest => dest.SheetMetalAttributes, opt => opt.MapFrom(src => src.SheetMetalAttributes))
            .ForMember(dest => dest.ScanningAttributes, opt => opt.MapFrom(src => src.ScanningAttributes))
            .ForMember(dest => dest.DesignAttributes, opt => opt.MapFrom(src => src.DesignAttributes));

        // Service-specific attributes mappings
        CreateMap<Order3DPrintingAttributes, Order3DPrintingAttributesDto>();
        CreateMap<OrderCncMachiningAttributes, OrderCncMachiningAttributesDto>();
        CreateMap<OrderSheetMetalAttributes, OrderSheetMetalAttributesDto>();
        CreateMap<Order3DScanningAttributes, Order3DScanningAttributesDto>();
        CreateMap<Order3DDesignAttributes, Order3DDesignAttributesDto>();

        // OrderStatus mappings
        CreateMap<CreateOrderStatusRequest, OrderStatus>()
            .ForMember(dest => dest.StatusId, opt => opt.Ignore())
            .ForMember(dest => dest.OrderId, opt => opt.Ignore())
            .ForMember(dest => dest.UpdatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.Timestamp, opt => opt.Ignore())
            .ForMember(dest => dest.Order, opt => opt.Ignore());

        CreateMap<OrderStatus, OrderStatusResponse>();

        // OrderFile mappings
        CreateMap<UploadOrderFileRequest, OrderFile>()
            .ForMember(dest => dest.FileId, opt => opt.Ignore())
            .ForMember(dest => dest.OrderId, opt => opt.Ignore())
            .ForMember(dest => dest.FileName, opt => opt.Ignore())
            .ForMember(dest => dest.FileSize, opt => opt.Ignore())
            .ForMember(dest => dest.FileType, opt => opt.Ignore())
            .ForMember(dest => dest.ObjectPath, opt => opt.Ignore())
            .ForMember(dest => dest.AccessLevel, opt => opt.Ignore())
            .ForMember(dest => dest.UploadedBy, opt => opt.Ignore())
            .ForMember(dest => dest.UploadedAt, opt => opt.Ignore())
            .ForMember(dest => dest.DeletedAt, opt => opt.Ignore())
            .ForMember(dest => dest.Order, opt => opt.Ignore());

        CreateMap<OrderFile, OrderFileResponse>();

        // OrderNote mappings
        CreateMap<CreateOrderNoteRequest, OrderNote>()
            .ForMember(dest => dest.NoteId, opt => opt.Ignore())
            .ForMember(dest => dest.OrderId, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedBy, opt => opt.Ignore())
            .ForMember(dest => dest.CreatedAt, opt => opt.Ignore())
            .ForMember(dest => dest.Order, opt => opt.Ignore());

        CreateMap<OrderNote, OrderNoteResponse>();
    }
}
